name: Build and Publish Docker Images

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ./Dockerfile

  lint-devcontainer:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: .devcontainer/Dockerfile

  build:
    runs-on: ubuntu-latest

    needs: lint
    if: ${{ success() }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract version from pyproject.toml
        id: version
        run: |
          VERSION=$(grep '^version' pyproject.toml | head -1 | sed -E 's/version = "(.*)"/\1/')
          echo "VERSION=$VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            basictheprogram/crossfire-dokuwiki:latest
            basictheprogram/crossfire-dokuwiki:${{ github.sha }}
            basictheprogram/crossfire-dokuwiki:${{ steps.version.outputs.VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
